-------------------------------------------------------------------------------------------------------VISTAS---------------------------------------------------------------------------------------------------------------------------

--VISTA PARA MOSTRAR LA INFORMACION DE TODOS LOS DESTINOS

CREATE VIEW V_DESTINATIONS AS
SELECT TITLE,DESCRIPTION,START_DATE,END_DATE,SPACES,GUIDE,PRICE
FROM DESTINATIONS;

--VISTA PARA MOSTRAR LOS USUARIOS,SU ROL Y STATUS

CREATE VIEW VIEW_USERS_WITH_ROLES AS
SELECT U.ID_USER, U.NAME, U.LAST_NAME, U.EMAIL, U.PHONE, R.DESCRIPCION AS ROL_DESCRIPTION, S.DESCRIPCION AS STATUS_DESCRIPTION
FROM USERS U
INNER JOIN ROLES R ON U.ROL = R.ID_ROLES
INNER JOIN STATUS S ON U.STATUS = S.ID_STATUS;


--VISTA PARA MOSTAR LOS USUARIOS QUE HAN COMPRADO VIAJES, SU NOMBRE, EL NOMBRE DEL DESTINO, EL NOMBRE DEL GUIA Y LA FECHA DE COMPRA
CREATE VIEW VIEW_TRIPS_WITH_DESTINATION_GUIDE AS
SELECT T.ID_TRIP, U.NAME || ' ' || U.LAST_NAME AS USER_NAME, D.TITLE AS DESTINATION_TITLE, G.NAME || ' ' || G.LAST_NAME AS GUIDE_NAME, T.BUY_DATE
FROM TRIP T
INNER JOIN USERS U ON T.ID_USER = U.ID_USER
INNER JOIN DESTINATIONS D ON T.ID_DESTINATION = D.ID_DESTINATION
INNER JOIN GUIDES G ON D.GUIDE = G.ID_GUIDE;

--VISTA PARA VER LAS SOLICITUDES DE CONTACTO, EL NOMBRE Y ESTATUS
CREATE VIEW VIEW_CONTACTS_WITH_STATUS AS
SELECT C.ID_CONTACT, C.EMAIL, C.PHONE, C.NAME || ' ' || C.LAST_NAME AS USER_NAME, SS.DESCRIPCION AS STATUS_DESCRIPTION, C.DATE_REGIS
FROM CONTACT C
INNER JOIN STATUS_SOLICITUD SS ON C.STATUS_CONTACT = SS.ID_STATUS_SOLICITUD;


--VISTA PARA MOSTAR TODOS LOS REVIEWS
CREATE VIEW VIEW_REVIEWS_WITH_USERS AS
SELECT R.ID_REVIEW, U.NAME || ' ' || U.LAST_NAME AS USER_NAME, R.TITLE, R.DESCRIPTION, R.CALIF, R.DATE_REVIEW
FROM REVIEW R
INNER JOIN USERS U ON R.ID_USER = U.ID_USER;


--VISTA PARA CONTAR LA CANTIDAD DE SOLICITUDES POR SERVICIO
CREATE VIEW VIEW_SERVICES_WITH_REQUESTS AS
SELECT S.ID_SERVICES, S.TITLE AS SERVICE_TITLE, S.DESCRIPTION AS SERVICE_DESCRIPTION, S.COST, COUNT(C.SERVICES) AS REQUESTS_COUNT
FROM SERVICES S
LEFT JOIN CONTACT C ON S.ID_SERVICES = C.SERVICES
GROUP BY S.ID_SERVICES, S.TITLE, S.DESCRIPTION, S.COST;

--VISTA PARA MOSTAR LA INFORMACION DEL BLOG, EL NOMBRE DEL USUARIO QUE LO CREA Y LA INFORMACION DEL DESTINO
CREATE VIEW VIEW_BLOGS_WITH_USERS_DESTINATIONS AS
SELECT B.ID_BLOG, U.NAME || ' ' || U.LAST_NAME AS AUTHOR_NAME, B.TITLE AS BLOG_TITLE, B.DESCRIPTION AS BLOG_DESCRIPTION, D.TITLE AS DESTINATION_TITLE
FROM BLOG_ENTRY B
INNER JOIN USERS U ON B.ID_USER = U.ID_USER
INNER JOIN DESTINATIONS D ON B.ID_DESTINATION = D.ID_DESTINATION;


--VISTA PARA MOSTAR LOS GUIAS Y LOS IDIOMAS HABLADOS
CREATE VIEW VIEW_GUIDES_WITH_LANGUAGES AS
SELECT G.ID_GUIDE, G.NAME || ' ' || G.LAST_NAME AS GUIDE_NAME, G.EXPERIENCE || ' AÃ±os de experiencia' AS EXPERIENCIA, LISTAGG(I.DESCRIPTION, ', ') WITHIN GROUP (ORDER BY I.DESCRIPTION) AS LANGUAGES
FROM GUIDES G
INNER JOIN IDIOMASXGUIDE IG ON G.ID_GUIDE = IG.ID_GUIDE
INNER JOIN IDIOMAS I ON IG.ID_IDIOMAS = I.ID_IDIOMAS
GROUP BY G.ID_GUIDE, G.NAME, G.LAST_NAME, G.EXPERIENCE;


--VISTA PARA VER LOS REVIEWS CON NOMBRE DE USUARIO
CREATE VIEW VIEW_REVIEWS_WITH_USERS_DESTINATIONS AS
SELECT R.ID_REVIEW, U.NAME || ' ' || U.LAST_NAME AS USER_NAME, R.TITLE, R.DESCRIPTION, R.CALIF, R.DATE_REVIEW
FROM REVIEW R
INNER JOIN USERS U ON R.ID_USER = U.ID_USER;


-------------------------------------------------------------------------------------------------------FUNCIONES---------------------------------------------------------------------------------------------------------------------------

--FUNCION PARA VER LA CANTIDAD DE USUARIO ACTIVOS

CREATE OR REPLACE FUNCTION GET_ACTIVE_USERS_COUNT RETURN NUMBER AS
    active_users_count NUMBER;
BEGIN
    SELECT COUNT(*) INTO active_users_count
    FROM USERS
    WHERE STATUS = 1;
    RETURN active_users_count;
END;

--FUNCION PARA VER LA CANTIDAD DE DESTINOS POSIBLES
CREATE OR REPLACE FUNCTION GET_AVAILABLE_DESTINATIONS_COUNT RETURN NUMBER AS
    available_destinations_count NUMBER;
BEGIN
    SELECT COUNT(*) INTO available_destinations_count
    FROM DESTINATIONS
    WHERE END_DATE >= SYSDATE;
    RETURN available_destinations_count;
END;

-- FUNCION PARA VER LAS CALIFICACIONES CON X RATING
CREATE OR REPLACE FUNCTION GET_REVIEWS_WITH_RATING(
    P_RATING NUMBER
) RETURN NUMBER AS
    reviews_with_rating NUMBER;
BEGIN
    SELECT COUNT(*) INTO reviews_with_rating
    FROM REVIEW
    WHERE CALIF = P_RATING;
    RETURN reviews_with_rating;
END;

--FUNCION PARA CONTAR LA CANTIDAD DE CONTACTOS PENDIENTES

CREATE OR REPLACE FUNCTION GET_PENDING_CONTACT_REQUESTS RETURN NUMBER AS
    pending_requests_count NUMBER;
BEGIN
    SELECT COUNT(*) INTO pending_requests_count
    FROM CONTACT
    WHERE STATUS_CONTACT = 1;
    RETURN pending_requests_count;
END;

--FUNCION PARA CONTAR LA CANTIDAD DE USUARIOS REGISTRADOS.
CREATE OR REPLACE FUNCTION GET_TOTAL_REGISTERED_USERS RETURN NUMBER AS
    total_registered_users NUMBER;
BEGIN
    SELECT COUNT(*) INTO total_registered_users
    FROM USERS;
    RETURN total_registered_users;
END;
-------------------------------------------------------------------------------------------------------PROCEDIMIENTOS ALMACENADOS----------------------------------------------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE INSERT_USER(
    P_NAME VARCHAR2,
    P_LAST_NAME VARCHAR2,
    P_EMAIL VARCHAR2,
    P_PHONE VARCHAR2,
    P_ROL NUMBER,
    P_PASSWORD VARCHAR2,
    P_STATUS NUMBER
) AS
BEGIN
    INSERT INTO USERS (NAME, LAST_NAME, EMAIL, PHONE, ROL, PASSWORD, STATUS)
    VALUES (P_NAME, P_LAST_NAME, P_EMAIL, P_PHONE, P_ROL, P_PASSWORD, P_STATUS);
    COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE INSERT_DESTINATION(
    P_TITLE VARCHAR2,
    P_DESCRIPTION VARCHAR2,
    P_START_DATE DATE,
    P_END_DATE DATE,
    P_SPACES NUMBER,
    P_GUIDE NUMBER,
    P_PRICE NUMBER
) AS
BEGIN
    INSERT INTO DESTINATIONS (TITLE, DESCRIPTION, START_DATE, END_DATE, SPACES, GUIDE, PRICE)
    VALUES (P_TITLE, P_DESCRIPTION, P_START_DATE, P_END_DATE, P_SPACES, P_GUIDE, P_PRICE);
    COMMIT;
END;
/


CREATE OR REPLACE PROCEDURE INSERT_GUIDE(
    P_NAME VARCHAR2,
    P_LAST_NAME VARCHAR2,
    P_EXPERIENCE NUMBER
) AS
BEGIN
    INSERT INTO GUIDES (NAME, LAST_NAME, EXPERIENCE)
    VALUES (P_NAME, P_LAST_NAME, P_EXPERIENCE);
    COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE ADD_LANGUAGE_TO_GUIDE(
    P_ID_GUIDE NUMBER,
    P_ID_IDIOMAS NUMBER
) AS
BEGIN
    INSERT INTO IDIOMASXGUIDE (ID_GUIDE, ID_IDIOMAS)
    VALUES (P_ID_GUIDE, P_ID_IDIOMAS);
    COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE UPDATE_CONTACT_STATUS(
    P_ID_CONTACT NUMBER,
    P_NEW_STATUS_CONTACT NUMBER
) AS
BEGIN
    UPDATE CONTACT
    SET STATUS_CONTACT = P_NEW_STATUS_CONTACT
    WHERE ID_CONTACT = P_ID_CONTACT;
    COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE FILTER_DESTINATIONS_BY_PRICE(
    P_MIN_PRICE NUMBER,
    P_MAX_PRICE NUMBER
) AS
BEGIN
    SELECT *
    FROM DESTINATIONS
    WHERE PRICE BETWEEN P_MIN_PRICE AND P_MAX_PRICE;
END;
/

CREATE OR REPLACE PROCEDURE FILTER_DESTINATIONS_BY_DATE(
    P_START_DATE DATE,
    P_END_DATE DATE
) AS
BEGIN
    SELECT *
    FROM DESTINATIONS
    WHERE START_DATE >= P_START_DATE AND END_DATE <= P_END_DATE;
END;
/

CREATE OR REPLACE PROCEDURE FILTER_DESTINATIONS_BY_SPACES(
    P_MIN_SPACES NUMBER
) AS
BEGIN
    SELECT *
    FROM DESTINATIONS
    WHERE SPACES >= P_MIN_SPACES;
END;
/

CREATE OR REPLACE PROCEDURE FILTER_DESTINATIONS_BY_PRICE(
    P_MIN_PRICE NUMBER,
    P_MAX_PRICE NUMBER
) AS
BEGIN
    SELECT *
    FROM DESTINATIONS
    WHERE PRICE BETWEEN P_MIN_PRICE AND P_MAX_PRICE;
END;


-------------------------------------------------------------------------------------------------------CURSORES---------------------------------------------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------------------------PAQUETES---------------------------------------------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------------------------TRIGGERS---------------------------------------------------------------------------------------------------------------------------



