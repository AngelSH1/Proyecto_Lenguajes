--------------CREACION TABLAS-------------------------

----------------------------------------------------STATUS-----------------------------------------------------------------------
--PARA CONOCER SI UN USUARIO SE ENCUENTRA ACTIVO O NO
CREATE TABLE STATUS(
ID_STATUS NUMBER NOT NULL,
DESCRIPCION VARCHAR2(50),
CONSTRAINT STATUS_PK PRIMARY KEY (ID_STATUS)
);

----
INSERT INTO STATUS VALUES(1, 'ACTIVE');
INSERT INTO STATUS VALUES(2, 'INACTIVE');
INSERT INTO STATUS VALUES(3, 'PENDING');

----------------------------------------------------ROLES-----------------------------------------------------------------------
------ ROLES 
--PARA DETERMINAR LOS ACCESOS A LA WEB
CREATE TABLE ROLES(
ID_ROLES NUMBER NOT NULL,
DESCRIPCION VARCHAR2(50),
CONSTRAINT ROLES_PK PRIMARY KEY (ID_ROLES)
);

----
INSERT INTO ROLES VALUES(1, 'ADMIN');
INSERT INTO ROLES VALUES(2, 'USER');


---------------------------------------------------USERS------------------------------------------------------------------------

--PARA ALMACENAR LA INFORMACION DE REGISTRO E INICIO DE USUARIO
CREATE TABLE USERS(
ID_USER NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
NAME VARCHAR2(50),
LAST_NAME VARCHAR2(50),
EMAIL VARCHAR2(50),
PHONE VARCHAR2(50),
ROL NUMBER,
PASSWORD VARCHAR2(50),
STATUS NUMBER,
CONSTRAINT USER_PK PRIMARY KEY (ID_USER),
FOREIGN KEY (STATUS) REFERENCES STATUS(ID_STATUS),
FOREIGN KEY (ROL) REFERENCES ROLES(ID_ROLES));

----
INSERT INTO USERS (NAME, LAST_NAME, EMAIL, PHONE, ROL, PASSWORD, STATUS)
VALUES('JOSHUA','MELENDEZ','JOSHUA33657@GMAIL.COM','+50672550428',1,'12345',1);

------------------------------------------------------SERVICES---------------------------------------------------------------------
------SERCVICES PARA ALMACENAR LOS SERVICIOS BRINDADOS
CREATE TABLE SERVICES(
ID_SERVICES NUMBER NOT NULL,
TITLE VARCHAR2(100),
DESCRIPTION VARCHAR2 (1000),
COST NUMBER,
CONSTRAINT SERVICES_PK PRIMARY KEY (ID_SERVICES));

----
INSERT INTO SERVICES VALUES(
1,'VISA AMERICANA',
'Este servicio incluye: 
-Asesoramiento personalizado para llenar el formulario de la visa. 
-Busqueda de la cita mas cercana para el proceso. 
-Busqueda continua en la pagina de la embajada para un posible adelantamiento de la cita. 
-Revision de documentos a presentar',20);


INSERT INTO SERVICES VALUES(2,
'ETA CANADIENSE',
'Este servicio incluye: 
-Asesoramiento personalizado para llenar el formulario de la ETA.',5);

INSERT INTO SERVICES VALUES(
3,'VIAJES PERSONALIZADOS',
'Este servicio incluye: 
-Asesoramiento para elegir un destino basado en tus necesidades.
-Busqueda de las mejores opciones disponibles de vuelos.
-Asesoramiento para actividades a realizar, entradas y tickets necesarios.
-Informacion relevante con respecto a requisitos de ingreso al destino.
-Apoyo para la compra de seguro medico.',100);

----------------------------------------------------STATUS_SOLICITUD---------------------------------------------------------------------
------AQUI ALMACENAMOS EL ESTADOS DE UNA SOLICITUD PARA SABER SI YA SE FUE PROCESADA O NO
CREATE TABLE STATUS_SOLICITUD(
ID_STATUS_SOLICITUD NUMBER NOT NULL,
DESCRIPCION VARCHAR2(50),
CONSTRAINT STATUS_SOLICITUD_PK PRIMARY KEY (ID_STATUS_SOLICITUD)
);

----
INSERT INTO STATUS_SOLICITUD VALUES(1, 'PENDING');
INSERT INTO STATUS_SOLICITUD VALUES(2, 'COMPLETED');

---------------------------------------------------------CONTACT------------------------------------------------------------------
------AQUI SE ALMACENA LOS DATOS DE CONTACTO DE UN USUARIO QUE DESEA SER CONTACTADO
CREATE TABLE CONTACT(
ID_CONTACT NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
EMAIL VARCHAR2(100),
PHONE VARCHAR2(20),
NAME VARCHAR2(50),
LAST_NAME VARCHAR2(50),
STATUS_CONTACT NUMBER,
DATE_REGIS DATE, 
SERVICES NUMBER,
CONSTRAINT CONTACT_PK PRIMARY KEY (ID_CONTACT),
FOREIGN KEY (STATUS_CONTACT) REFERENCES STATUS_SOLICITUD(ID_STATUS_SOLICITUD),
FOREIGN KEY (SERVICES) REFERENCES SERVICES(ID_SERVICES));
----
INSERT INTO CONTACT (EMAIL, PHONE, NAME, LAST_NAME,STATUS_CONTACT, DATE_REGIS, SERVICES)
VALUES ('EMAIL_EXAMPLE@EMAIL1.COM', '+50670118975', 'John', 'Doe',1, SYSDATE, 2);


--------------------------------------------------------DESTINATIONS-------------------------------------------------------------------
-------ALMACENA LA INFORMACION DE TODOS LOS POSIBLES DESTINOS
CREATE TABLE DESTINATIONS(
ID_DESTINATION NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
TITLE VARCHAR2(100),
DESCRIPTION CLOB,
START_DATE DATE,
END_DATE DATE,
SPACES NUMBER,
GUIDE NUMBER,
PRICE NUMBER,
IMAGEN BLOB,
CONSTRAINT ID_DESTINATION PRIMARY KEY (ID_DESTINATION),
FOREIGN KEY (GUIDE) REFERENCES GUIDES (ID_GUIDE)
);

----
INSERT INTO DESTINATIONS (TITLE, DESCRIPTION, START_DATE, END_DATE, SPACES, GUIDE, PRICE, IMAGEN)
VALUES ('Destination Title', 'Destination Description', SYSDATE, SYSDATE+15, 10, 1, 5000, EMPTY_BLOB());

---------------------------------------------------------GUIDES------------------------------------------------------------------
-------ALMACENA LA INFORMACION DEL GUIA QUE ESTARA ACOMPAÑANDO AL GRUPO EN EL VIAJE
CREATE TABLE GUIDES(
ID_GUIDE NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
NAME VARCHAR2(50),
LAST_NAME VARCHAR2(100),
GUIDE_IDIOMAS NUMBER,
EXPERIENCE NUMBER,
CONSTRAINT GUIDES_PK PRIMARY KEY (ID_GUIDE),
FOREIGN KEY (GUIDE_IDIOMAS) REFERENCES IDIOMAS (ID_IDIOMAS)
);

----
INSERT INTO GUIDES (NAME, LAST_NAME, GUIDE_IDIOMAS, EXPERIENCE)
VALUES ('John', 'Doe', 1, 5);

---------------------------------------------------------IDIOMAS------------------------------------------------------------------
---------ALMACENA LOS IDIOMAS QUE PODRIA HABLAR UN GUIA
CREATE TABLE IDIOMAS(
ID_IDIOMAS NUMBER,
DESCRIPTION VARCHAR2(100),
CONSTRAINT IDIOMAS_PK PRIMARY KEY (ID_IDIOMAS)
);

----
INSERT INTO IDIOMAS (ID_IDIOMAS, DESCRIPTION)
VALUES (1, 'English');

----------------------------------------------------------TRIP-----------------------------------------------------------------
---------ALMACENA LOS DATOS DE COMPRA DE UN PAQUETE DE VIAJE POR UN USUARIO REGISTRADO
CREATE TABLE TRIP(
ID_TRIP NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
ID_USER NUMBER,
ID_DESTINATION NUMBER,
BUY_DATE DATE,
CONSTRAINT TRIP_PK PRIMARY KEY (ID_TRIP),
FOREIGN KEY (ID_USER) REFERENCES USERS (ID_USER),
FOREIGN KEY (ID_DESTINATION) REFERENCES DESTINATIONS (ID_DESTINATION)
);

----
INSERT INTO TRIP (ID_USER, ID_DESTINATION, BUY_DATE)
VALUES (1, 1, SYSDATE);

----------------------------------------------------------REVIEW----------------------------------------------------------------
--------ALMACENA LOS DATOS DE LAS RESEÑAS REALIZADAS POR UN USUARIO
CREATE TABLE REVIEW(
ID_REVIEW NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
ID_USER NUMBER,
TITLE VARCHAR2(100),
DESCRIPTION VARCHAR2(1000),
CALIF NUMBER,
DATE_REVIEW DATE,
CONSTRAINT REVIEW_PK PRIMARY KEY (ID_REVIEW),
FOREIGN KEY (ID_USER) REFERENCES USERS (ID_USER)
);

----
INSERT INTO REVIEW (ID_USER, TITLE, DESCRIPTION, CALIF, DATE_REVIEW)
VALUES (1, 'Great Experience', 'I had a wonderful experience with this service.', 5, SYSDATE);

---------------------------------------------------------BLOG_ENTRY------------------------------------------------------------------
--------ALMACENA LAS ENTRADAS AL BLOG REALIZADAS POR UN ADMINISTRADOR
CREATE TABLE BLOG_ENTRY(
ID_BLOG NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
TITLE VARCHAR2(200),
DESCRIPTION CLOB,
ID_USER NUMBER,
ID_DESTINATION NUMBER,
IMAGE1 BLOB,
IMAGE2 BLOB,
IMAGE3 BLOB,
IMAGE4 BLOB,
CONSTRAINT BLOG_PK PRIMARY KEY (ID_BLOG),
FOREIGN KEY (ID_USER) REFERENCES USERS (ID_USER),
FOREIGN KEY (ID_DESTINATION) REFERENCES DESTINATIONS (ID_DESTINATION)
);

----
INSERT INTO BLOG_ENTRY (TITLE, DESCRIPTION, ID_USER, ID_DESTINATION, IMAGE1, IMAGE2, IMAGE3, IMAGE4)
VALUES ('My Travel Adventure', 'I had an amazing adventure during my trip to this destination.', 1, 1, EMPTY_BLOB(), EMPTY_BLOB(), EMPTY_BLOB(), EMPTY_BLOB());
---------------------------------------------------------------------------------------------------------------------------











