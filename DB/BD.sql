--------------CREACION TABLAS-------------------------

----------------------------------------------------STATUS-----------------------------------------------------------------------
--PARA CONOCER SI UN USUARIO SE ENCUENTRA ACTIVO O NO
CREATE TABLE STATUS(
ID_STATUS NUMBER NOT NULL,
DESCRIPCION VARCHAR2(50),
CONSTRAINT STATUS_PK PRIMARY KEY (ID_STATUS)
);


----------------------------------------------------ROLES-----------------------------------------------------------------------
------ ROLES 
--PARA DETERMINAR LOS ACCESOS A LA WEB
CREATE TABLE ROLES(
ID_ROLES NUMBER NOT NULL,
DESCRIPCION VARCHAR2(50),
CONSTRAINT ROLES_PK PRIMARY KEY (ID_ROLES)
);




---------------------------------------------------USERS------------------------------------------------------------------------

--PARA ALMACENAR LA INFORMACION DE REGISTRO E INICIO DE USUARIO
CREATE TABLE USERS(
ID_USER NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
NAME VARCHAR2(50),
LAST_NAME VARCHAR2(50),
EMAIL VARCHAR2(50),
PHONE VARCHAR2(50),
ROL NUMBER,
PASSWORD VARCHAR2(50),
STATUS NUMBER,
CONSTRAINT USER_PK PRIMARY KEY (ID_USER),
FOREIGN KEY (STATUS) REFERENCES STATUS(ID_STATUS),
FOREIGN KEY (ROL) REFERENCES ROLES(ID_ROLES));



------------------------------------------------------SERVICES---------------------------------------------------------------------
------SERCVICES PARA ALMACENAR LOS SERVICIOS BRINDADOS
CREATE TABLE SERVICES(
ID_SERVICES NUMBER NOT NULL,
TITLE VARCHAR2(100),
DESCRIPTION VARCHAR2 (1000),
COST NUMBER,
CONSTRAINT SERVICES_PK PRIMARY KEY (ID_SERVICES));

----


----------------------------------------------------STATUS_SOLICITUD---------------------------------------------------------------------
------AQUI ALMACENAMOS EL ESTADOS DE UNA SOLICITUD PARA SABER SI YA SE FUE PROCESADA O NO
CREATE TABLE STATUS_SOLICITUD(
ID_STATUS_SOLICITUD NUMBER NOT NULL,
DESCRIPCION VARCHAR2(50),
CONSTRAINT STATUS_SOLICITUD_PK PRIMARY KEY (ID_STATUS_SOLICITUD)
);



---------------------------------------------------------CONTACT------------------------------------------------------------------
------AQUI SE ALMACENA LOS DATOS DE CONTACTO DE UN USUARIO QUE DESEA SER CONTACTADO
CREATE TABLE CONTACT(
ID_CONTACT NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
EMAIL VARCHAR2(100),
PHONE VARCHAR2(20),
NAME VARCHAR2(50),
LAST_NAME VARCHAR2(50),
STATUS_CONTACT NUMBER,
DATE_REGIS DATE, 
SERVICES NUMBER,
CONSTRAINT CONTACT_PK PRIMARY KEY (ID_CONTACT),
FOREIGN KEY (STATUS_CONTACT) REFERENCES STATUS_SOLICITUD(ID_STATUS_SOLICITUD),
FOREIGN KEY (SERVICES) REFERENCES SERVICES(ID_SERVICES));



--------------------------------------------------------DESTINATIONS-------------------------------------------------------------------
-------ALMACENA LA INFORMACION DE TODOS LOS POSIBLES DESTINOS
CREATE TABLE DESTINATIONS(
ID_DESTINATION NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
TITLE VARCHAR2(100),
DESCRIPTION VARCHAR2(4000),
START_DATE DATE,
END_DATE DATE,
SPACES NUMBER,
GUIDE NUMBER,
PRICE NUMBER,
IMAGEN BLOB,
CONSTRAINT ID_DESTINATION PRIMARY KEY (ID_DESTINATION),
FOREIGN KEY (GUIDE) REFERENCES GUIDES (ID_GUIDE)
);



---------------------------------------------------------GUIDES------------------------------------------------------------------
-------ALMACENA LA INFORMACION DEL GUIA QUE ESTARA ACOMPAÑANDO AL GRUPO EN EL VIAJE
CREATE TABLE GUIDES(
ID_GUIDE NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
NAME VARCHAR2(50),
LAST_NAME VARCHAR2(100),
EXPERIENCE NUMBER,
CONSTRAINT GUIDES_PK PRIMARY KEY (ID_GUIDE)
);



---------------------------------------------------------IDIOMAS------------------------------------------------------------------
---------ALMACENA LOS IDIOMAS QUE PODRIA HABLAR UN GUIA
CREATE TABLE IDIOMAS(
ID_IDIOMAS NUMBER,
DESCRIPTION VARCHAR2(100),
CONSTRAINT IDIOMAS_PK PRIMARY KEY (ID_IDIOMAS)
);




----------------------------------------------------------TRIP-----------------------------------------------------------------
---------ALMACENA LOS DATOS DE COMPRA DE UN PAQUETE DE VIAJE POR UN USUARIO REGISTRADO
CREATE TABLE TRIP(
ID_TRIP NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
ID_USER NUMBER,
ID_DESTINATION NUMBER,
BUY_DATE DATE,
CONSTRAINT TRIP_PK PRIMARY KEY (ID_TRIP),
FOREIGN KEY (ID_USER) REFERENCES USERS (ID_USER),
FOREIGN KEY (ID_DESTINATION) REFERENCES DESTINATIONS (ID_DESTINATION)
);


----------------------------------------------------------REVIEW----------------------------------------------------------------
--------ALMACENA LOS DATOS DE LAS RESEÑAS REALIZADAS POR UN USUARIO
CREATE TABLE REVIEW(
ID_REVIEW NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
ID_USER NUMBER,
TITLE VARCHAR2(100),
DESCRIPTION VARCHAR2(4000),
CALIF NUMBER,
DATE_REVIEW DATE,
CONSTRAINT REVIEW_PK PRIMARY KEY (ID_REVIEW),
FOREIGN KEY (ID_USER) REFERENCES USERS (ID_USER)
);



---------------------------------------------------------BLOG_ENTRY------------------------------------------------------------------
--------ALMACENA LAS ENTRADAS AL BLOG REALIZADAS POR UN ADMINISTRADOR
CREATE TABLE BLOG_ENTRY(
ID_BLOG NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
TITLE VARCHAR2(200),
DESCRIPTION VARCHAR2(4000),
ID_USER NUMBER,
ID_DESTINATION NUMBER,
IMAGE1 BLOB,
IMAGE2 BLOB,
IMAGE3 BLOB,
IMAGE4 BLOB,
CONSTRAINT BLOG_PK PRIMARY KEY (ID_BLOG),
FOREIGN KEY (ID_USER) REFERENCES USERS (ID_USER),
FOREIGN KEY (ID_DESTINATION) REFERENCES DESTINATIONS (ID_DESTINATION)
);

---------------------------------------------------------IDIOMASXGUIA------------------------------------------------------------------

CREATE TABLE IDIOMASXGUIDE(
ID_IDIOMAXGUIA NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
ID_GUIDE NUMBER,
ID_IDIOMAS NUMBER,
CONSTRAINT IDXGU_PK PRIMARY KEY (ID_IDIOMAXGUIA),
FOREIGN KEY (ID_GUIDE) REFERENCES GUIDES (ID_GUIDE),
FOREIGN KEY (ID_IDIOMAS) REFERENCES IDIOMAS (ID_IDIOMAS)
)

